var search_data = {"index":{"searchIndex":["adminscontroller","adminshelper","applicationcontroller","applicationhelper","cart","cartscontroller","cartshelper","comment","commentscontroller","commentshelper","course","coursescontroller","courseshelper","department","departmentscontroller","departmentshelper","errorscontroller","handle","handlescontroller","handleshelper","hubcourse","hubcoursescontroller","hubcourseshelper","interact","jqueryweekcalendar","install","rails","engine","railtie","majorshelper","myclassescontroller","myclasseshelper","professor","professorscontroller","professorshelper","report","reportscontroller","reportshelper","sessionscontroller","sessionshelper","setting","settingscontroller","settingshelper","staticpagescontroller","staticpageshelper","syllabus","syllabuscontroller","syllabushelper","utf8sanitizer","user","userscontroller","usershelper","votescontroller","voteshelper","<=>()","about()","accounts()","add()","add()","admin()","admin_report_notice()","advanced()","authenticate()","basics()","build()","build()","build_from()","build_report()","call()","cancel()","cart()","change()","clear()","clear()","click_mobile_format()","comment_count()","confirm_destroy()","copy_calendar()","courses_last_updated()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_cart()","create_cartid()","csv_headers()","current_cart()","current_handle()","current_professor()","current_semester()","current_user()","current_user=()","current_user?()","destroy()","destroy()","destroy()","destroy()","destroy()","disclaimer()","disclaimer_cookie_expired?()","display_cart?()","duplicate?()","edit()","edit()","edit()","edit()","edit()","edit()","edit_motd()","editcourse()","error_mailer()","error_report()","expire_sessions()","faculty_user?()","features()","find_by_crn()","find_commentable()","fix_gaps()","full_title()","generate_relationships()","geturl()","get_courses()","get_courses()","get_exception()","get_link()","get_module()","get_semesters()","get_val()","guidelines()","handle()","handlekey()","has_children?()","help()","hide_disclaimer()","hide_motd()","hide_remove()","index()","index()","index()","index()","index()","index()","index()","index()","index()","initialize_ldap_con()","lock()","mail_cart()","mail_to()","make_admin()","make_old()","make_query_string()","mobile_format()","mobile_switch()","motd()","motd()","motd_cookie_expired?()","mute()","mute()","nameerror()","new()","new()","new()","new()","new()","new()","new()","new()","new()","not_found()","notify_prof_set()","notify_professor()","populate()","preview()","professor_courses()","professors()","questions()","questions_mailer()","redirect_back_or()","remove()","reply()","reply_form()","report_confirmation()","reported()","resolve()","reveal()","reveal_handle_user()","schedule()","score()","search()","search()","search()","search()","search()","search()","search()","self_destroy()","send_e()","send_q()","server_error()","set()","set_cart()","set_courses()","set_motd()","set_prev()","sever_relationships()","show()","show()","show()","show()","show()","show()","show()","show()","show()","sign_in()","sign_out()","signed_in?()","sort_by_score()","source_root()","store_location()","text_semester()","to_csv()","to_csv()","to_csv()","to_csv()","to_csv_row()","to_param()","to_param()","to_reported()","to_reporter()","toggle_active()","toggle_status()","toggle_status()","translate_mod()","translate_semester()","translate_semester()","translate_time()","unlock()","unmake_admin()","unmute()","unresolve()","update()","update()","update()","update()","update()","update()","update()","update_all()","update_size()","user_count()","readme_for_app"],"longSearchIndex":["adminscontroller","adminshelper","applicationcontroller","applicationhelper","cart","cartscontroller","cartshelper","comment","commentscontroller","commentshelper","course","coursescontroller","courseshelper","department","departmentscontroller","departmentshelper","errorscontroller","handle","handlescontroller","handleshelper","hubcourse","hubcoursescontroller","hubcourseshelper","interact","jqueryweekcalendar","jqueryweekcalendar::install","jqueryweekcalendar::rails","jqueryweekcalendar::rails::engine","jqueryweekcalendar::rails::railtie","majorshelper","myclassescontroller","myclasseshelper","professor","professorscontroller","professorshelper","report","reportscontroller","reportshelper","sessionscontroller","sessionshelper","setting","settingscontroller","settingshelper","staticpagescontroller","staticpageshelper","syllabus","syllabuscontroller","syllabushelper","utf8sanitizer","user","userscontroller","usershelper","votescontroller","voteshelper","course#<=>()","staticpagescontroller#about()","staticpagescontroller#accounts()","cartscontroller#add()","syllabus#add()","adminscontroller#admin()","interact#admin_report_notice()","staticpagescontroller#advanced()","sessionshelper#authenticate()","staticpagescontroller#basics()","course::build()","hubcourse::build()","comment::build_from()","report::build_report()","utf8sanitizer#call()","course#cancel()","staticpagescontroller#cart()","settingscontroller#change()","cartscontroller#clear()","errorscontroller#clear()","sessionscontroller#click_mobile_format()","applicationhelper#comment_count()","userscontroller#confirm_destroy()","jqueryweekcalendar::install#copy_calendar()","applicationhelper#courses_last_updated()","cartscontroller#create()","commentscontroller#create()","coursescontroller#create()","professorscontroller#create()","reportscontroller#create()","sessionscontroller#create()","syllabuscontroller#create()","userscontroller#create()","votescontroller#create()","user#create_cart()","cart#create_cartid()","course::csv_headers()","cartshelper#current_cart()","handleshelper#current_handle()","sessionshelper#current_professor()","courseshelper#current_semester()","sessionshelper#current_user()","sessionshelper#current_user=()","sessionshelper#current_user?()","cartscontroller#destroy()","commentscontroller#destroy()","sessionscontroller#destroy()","userscontroller#destroy()","votescontroller#destroy()","sessionshelper#disclaimer()","sessionshelper#disclaimer_cookie_expired?()","applicationhelper#display_cart?()","report#duplicate?()","comment#edit()","commentscontroller#edit()","coursescontroller#edit()","professorscontroller#edit()","reportscontroller#edit()","userscontroller#edit()","settingscontroller#edit_motd()","staticpagescontroller#editcourse()","staticpagescontroller#error_mailer()","interact#error_report()","adminscontroller#expire_sessions()","sessionshelper#faculty_user?()","staticpagescontroller#features()","courseshelper#find_by_crn()","comment::find_commentable()","course#fix_gaps()","applicationhelper#full_title()","course#generate_relationships()","usershelper#geturl()","cart#get_courses()","cartshelper#get_courses()","errorscontroller#get_exception()","courseshelper#get_link()","course#get_module()","settingshelper#get_semesters()","setting::get_val()","staticpagescontroller#guidelines()","comment#handle()","user#handlekey()","comment#has_children?()","staticpagescontroller#help()","sessionscontroller#hide_disclaimer()","sessionscontroller#hide_motd()","commentscontroller#hide_remove()","commentscontroller#index()","coursescontroller#index()","departmentscontroller#index()","handlescontroller#index()","hubcoursescontroller#index()","myclassescontroller#index()","professorscontroller#index()","reportscontroller#index()","userscontroller#index()","sessionshelper#initialize_ldap_con()","report#lock()","interact#mail_cart()","cartscontroller#mail_to()","user#make_admin()","comment#make_old()","applicationhelper#make_query_string()","sessionscontroller#mobile_format()","applicationcontroller#mobile_switch()","applicationhelper#motd()","sessionshelper#motd()","sessionshelper#motd_cookie_expired?()","handle#mute()","handlescontroller#mute()","staticpagescontroller#nameerror()","commentscontroller#new()","coursescontroller#new()","myclassescontroller#new()","professorscontroller#new()","reportscontroller#new()","sessionscontroller#new()","syllabuscontroller#new()","utf8sanitizer::new()","userscontroller#new()","errorscontroller#not_found()","course#notify_prof_set()","interact#notify_professor()","professorscontroller#populate()","professorscontroller#preview()","professorscontroller#professor_courses()","staticpagescontroller#professors()","staticpagescontroller#questions()","staticpagescontroller#questions_mailer()","sessionshelper#redirect_back_or()","cartscontroller#remove()","commentscontroller#reply()","commentscontroller#reply_form()","interact#report_confirmation()","report#reported()","report#resolve()","handlescontroller#reveal()","interact#reveal_handle_user()","userscontroller#schedule()","comment#score()","cartscontroller#search()","coursescontroller#search()","handlescontroller#search()","hubcoursescontroller#search()","myclassescontroller#search()","professorscontroller#search()","userscontroller#search()","userscontroller#self_destroy()","interact#send_e()","interact#send_q()","errorscontroller#server_error()","setting::set()","cartshelper#set_cart()","cart#set_courses()","settingscontroller#set_motd()","comment#set_prev()","course#sever_relationships()","cartscontroller#show()","commentscontroller#show()","departmentscontroller#show()","handlescontroller#show()","hubcoursescontroller#show()","myclassescontroller#show()","professorscontroller#show()","syllabuscontroller#show()","userscontroller#show()","sessionshelper#sign_in()","sessionshelper#sign_out()","sessionshelper#signed_in?()","comment::sort_by_score()","jqueryweekcalendar::install::source_root()","sessionshelper#store_location()","course::text_semester()","cart#to_csv()","department#to_csv()","hubcourse#to_csv()","professor#to_csv()","course::to_csv_row()","department#to_param()","hubcourse#to_param()","interact#to_reported()","interact#to_reporter()","professorscontroller#toggle_active()","comment#toggle_status()","professor#toggle_status()","courseshelper#translate_mod()","course::translate_semester()","courseshelper#translate_semester()","commentshelper#translate_time()","report#unlock()","user#unmake_admin()","handle#unmute()","report#unresolve()","cartscontroller#update()","commentscontroller#update()","coursescontroller#update()","handlescontroller#update()","professorscontroller#update()","reportscontroller#update()","userscontroller#update()","settingscontroller#update_all()","course#update_size()","applicationhelper#user_count()",""],"info":[["AdminsController","","AdminsController.html","",""],["AdminsHelper","","AdminsHelper.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Cart","","Cart.html","","<p>Schema Information\n<p>Table name: carts\n\n<pre>id         :integer(4)      not null, primary key\ncourses    :string(255) ...</pre>\n"],["CartsController","","CartsController.html","",""],["CartsHelper","","CartsHelper.html","",""],["Comment","","Comment.html","","<p>Schema Information\n<p>Table name: comments\n\n<pre>id                 :integer(4)      not null, primary key\ncommentable_id ...</pre>\n"],["CommentsController","","CommentsController.html","",""],["CommentsHelper","","CommentsHelper.html","",""],["Course","","Course.html","","<p>Schema Information\n<p>Table name: courses\n\n<pre>id               :integer(4)      not null, primary key\ndept    ...</pre>\n"],["CoursesController","","CoursesController.html","",""],["CoursesHelper","","CoursesHelper.html","",""],["Department","","Department.html","","<p>Schema Information\n<p>Table name: departments\n\n<pre>id         :integer(4)      not null, primary key\ndept      ...</pre>\n"],["DepartmentsController","","DepartmentsController.html","",""],["DepartmentsHelper","","DepartmentsHelper.html","",""],["ErrorsController","","ErrorsController.html","",""],["Handle","","Handle.html","","<p>Schema Information\n<p>Table name: handles\n\n<pre>id         :integer(4)      not null, primary key\nusername   :string(255) ...</pre>\n"],["HandlesController","","HandlesController.html","",""],["HandlesHelper","","HandlesHelper.html","",""],["Hubcourse","","Hubcourse.html","","<p>Schema Information\n<p>Table name: hubcourses\n\n<pre>id            :integer(4)      not null, primary key\nhub_id  ...</pre>\n"],["HubcoursesController","","HubcoursesController.html","",""],["HubcoursesHelper","","HubcoursesHelper.html","",""],["Interact","","Interact.html","",""],["JqueryWeekCalendar","","JqueryWeekCalendar.html","",""],["JqueryWeekCalendar::Install","","JqueryWeekCalendar/Install.html","",""],["JqueryWeekCalendar::Rails","","JqueryWeekCalendar/Rails.html","",""],["JqueryWeekCalendar::Rails::Engine","","JqueryWeekCalendar/Rails/Engine.html","",""],["JqueryWeekCalendar::Rails::Railtie","","JqueryWeekCalendar/Rails/Railtie.html","",""],["MajorsHelper","","MajorsHelper.html","",""],["MyClassesController","","MyClassesController.html","",""],["MyClassesHelper","","MyClassesHelper.html","",""],["Professor","","Professor.html","","<p>Schema Information\n<p>Table name: professors\n\n<pre>id         :integer(4)      not null, primary key\ncreated_at ...</pre>\n"],["ProfessorsController","","ProfessorsController.html","","<p>Professor Controller\n<p>These actions perform operations related to the professor object\n<p>ACTIONS in the order …\n"],["ProfessorsHelper","","ProfessorsHelper.html","",""],["Report","","Report.html","","<p>Schema Information\n<p>Table name: reports\n\n<pre>id                 :integer(4)      not null, primary key\ntitle ...</pre>\n"],["ReportsController","","ReportsController.html","",""],["ReportsHelper","","ReportsHelper.html","",""],["SessionsController","","SessionsController.html","","<p>Session Controller\n<p>This is where we create sessions.\n"],["SessionsHelper","","SessionsHelper.html","",""],["Setting","","Setting.html","","<p>Schema Information\n<p>Table name: settings\n\n<pre>id         :integer(4)      not null, primary key\nkey        :string(255) ...</pre>\n"],["SettingsController","","SettingsController.html","",""],["SettingsHelper","","SettingsHelper.html","",""],["StaticPagesController","","StaticPagesController.html","","<p>A static page has no dynamic content, so each page is essentially just a\nview.\n"],["StaticPagesHelper","","StaticPagesHelper.html","",""],["Syllabus","","Syllabus.html","",""],["SyllabusController","","SyllabusController.html","",""],["SyllabusHelper","","SyllabusHelper.html","",""],["UTF8Sanitizer","","UTF8Sanitizer.html","",""],["User","","User.html","","<p>Schema Information\n<p>Table name: users\n\n<pre>id              :integer(4)      not null, primary key\nfname      ...</pre>\n"],["UsersController","","UsersController.html","","<p>User Controller\n<p>This is where we create User model objects in order to gather data from the\ndatabase, …\n"],["UsersHelper","","UsersHelper.html","",""],["VotesController","","VotesController.html","",""],["VotesHelper","","VotesHelper.html","",""],["<=>","Course","Course.html#method-i-3C-3D-3E","(other)","<p>Overiding comparaison operator so spring semesters will come before fall\nsemesters when comparing two …\n"],["about","StaticPagesController","StaticPagesController.html#method-i-about","()",""],["accounts","StaticPagesController","StaticPagesController.html#method-i-accounts","()",""],["add","CartsController","CartsController.html#method-i-add","()","<p>This adds the selected courses to the user&#39;s cart This method only gets\ncalled when adding courses …\n"],["add","Syllabus","Syllabus.html#method-i-add","()",""],["admin","AdminsController","AdminsController.html#method-i-admin","()",""],["admin_report_notice","Interact","Interact.html#method-i-admin_report_notice","(sender, report)",""],["advanced","StaticPagesController","StaticPagesController.html#method-i-advanced","()",""],["authenticate","SessionsHelper","SessionsHelper.html#method-i-authenticate","(user, pass)","<p>Authenticate a user against the college ldap returns false on failure and\nan array of matching ldap entries …\n"],["basics","StaticPagesController","StaticPagesController.html#method-i-basics","()",""],["build","Course","Course.html#method-c-build","(course_arr)",""],["build","Hubcourse","Hubcourse.html#method-c-build","(hub_id, cnum)",""],["build_from","Comment","Comment.html#method-c-build_from","(obj, user_id, comment)","<p>Helper class method that allows you to build a comment by passing a\ncommentable object, a user_id, and …\n"],["build_report","Report","Report.html#method-c-build_report","(reportable,reporter,title,body)",""],["call","UTF8Sanitizer","UTF8Sanitizer.html#method-i-call","(env)","<p>Sanitizes the env before calling our app\n"],["cancel","Course","Course.html#method-i-cancel","()",""],["cart","StaticPagesController","StaticPagesController.html#method-i-cart","()",""],["change","SettingsController","SettingsController.html#method-i-change","()",""],["clear","CartsController","CartsController.html#method-i-clear","()","<p>clear cart of courses\n"],["clear","ErrorsController","ErrorsController.html#method-i-clear","()","<p>clear cookies, used on 500 error pages\n"],["click_mobile_format","SessionsController","SessionsController.html#method-i-click_mobile_format","()","<p>Toggle mobile/html format layout\n"],["comment_count","ApplicationHelper","ApplicationHelper.html#method-i-comment_count","()",""],["confirm_destroy","UsersController","UsersController.html#method-i-confirm_destroy","()","<p>render the page to delete account\n<p><strong>Permissions</strong> current_user\n"],["copy_calendar","JqueryWeekCalendar::Install","JqueryWeekCalendar/Install.html#method-i-copy_calendar","()",""],["courses_last_updated","ApplicationHelper","ApplicationHelper.html#method-i-courses_last_updated","()",""],["create","CartsController","CartsController.html#method-i-create","()","<p>creates a new cart with courses in it\n"],["create","CommentsController","CommentsController.html#method-i-create","()",""],["create","CoursesController","CoursesController.html#method-i-create","()","<p>CREATE action: empty\n"],["create","ProfessorsController","ProfessorsController.html#method-i-create","()","<p>create a new professor from form\n"],["create","ReportsController","ReportsController.html#method-i-create","()",""],["create","SessionsController","SessionsController.html#method-i-create","()","<p>Creates a new session\n"],["create","SyllabusController","SyllabusController.html#method-i-create","()",""],["create","UsersController","UsersController.html#method-i-create","()","<p>Posts a new user\n<p><strong>Permissions</strong> any browser\n"],["create","VotesController","VotesController.html#method-i-create","()",""],["create_cart","User","User.html#method-i-create_cart","()",""],["create_cartid","Cart","Cart.html#method-i-create_cartid","()",""],["csv_headers","Course","Course.html#method-c-csv_headers","()",""],["current_cart","CartsHelper","CartsHelper.html#method-i-current_cart","()",""],["current_handle","HandlesHelper","HandlesHelper.html#method-i-current_handle","()",""],["current_professor","SessionsHelper","SessionsHelper.html#method-i-current_professor","()","<p>Sets the current professor using the current user&#39;s fname and lname.\n"],["current_semester","CoursesHelper","CoursesHelper.html#method-i-current_semester","()",""],["current_user","SessionsHelper","SessionsHelper.html#method-i-current_user","()","<p>Sets the current user, if not already set, by using the remember_token\ncookie we set when the user signed …\n"],["current_user=","SessionsHelper","SessionsHelper.html#method-i-current_user-3D","(user)","<p>Allows us to set the current user\n"],["current_user?","SessionsHelper","SessionsHelper.html#method-i-current_user-3F","(user)","<p>Check if a given user is equivalent to the current user signed in\n"],["destroy","CartsController","CartsController.html#method-i-destroy","()","<p>deletes a cart\n"],["destroy","CommentsController","CommentsController.html#method-i-destroy","()",""],["destroy","SessionsController","SessionsController.html#method-i-destroy","()","<p>End a session\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>The action used to delete a user. (for admin use)\n<p><strong>Permissions</strong> admin_user\n"],["destroy","VotesController","VotesController.html#method-i-destroy","()",""],["disclaimer","SessionsHelper","SessionsHelper.html#method-i-disclaimer","()",""],["disclaimer_cookie_expired?","SessionsHelper","SessionsHelper.html#method-i-disclaimer_cookie_expired-3F","()","<p>something isn&#39;t working right (the updated_at)\n"],["display_cart?","ApplicationHelper","ApplicationHelper.html#method-i-display_cart-3F","()",""],["duplicate?","Report","Report.html#method-i-duplicate-3F","()",""],["edit","Comment","Comment.html#method-i-edit","(new_body, prev_id)","<p>used by the update method to update the body and prev version id of a\ncomment\n"],["edit","CommentsController","CommentsController.html#method-i-edit","()",""],["edit","CoursesController","CoursesController.html#method-i-edit","()","<p>EDIT action: empty\n"],["edit","ProfessorsController","ProfessorsController.html#method-i-edit","()","<p>get the professor to be edited by the form\n"],["edit","ReportsController","ReportsController.html#method-i-edit","()",""],["edit","UsersController","UsersController.html#method-i-edit","()","<p>renders the edit view (settings)\n<p><strong>Permissions</strong> current_user\n"],["edit_motd","SettingsController","SettingsController.html#method-i-edit_motd","()",""],["editcourse","StaticPagesController","StaticPagesController.html#method-i-editcourse","()",""],["error_mailer","StaticPagesController","StaticPagesController.html#method-i-error_mailer","()",""],["error_report","Interact","Interact.html#method-i-error_report","(message, page, browser)",""],["expire_sessions","AdminsController","AdminsController.html#method-i-expire_sessions","()",""],["faculty_user?","SessionsHelper","SessionsHelper.html#method-i-faculty_user-3F","(user)","<p>Check if a given user&#39;s role is &#39;Faculty&#39;\n"],["features","StaticPagesController","StaticPagesController.html#method-i-features","()",""],["find_by_crn","CoursesHelper","CoursesHelper.html#method-i-find_by_crn","(course_list, semcrn)",""],["find_commentable","Comment","Comment.html#method-c-find_commentable","(commentable_str, commentable_id)","<p>Helper class method to look up a commentable object given the commentable\nclass name and id\n"],["fix_gaps","Course","Course.html#method-i-fix_gaps","()","<p>allow for setting query sort by order\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">set_scope</span>(<span class=\"ruby-identifier\">order</span>)\n  <span class=\"ruby-identifier\">default_scope</span> :<span class=\"ruby-identifier\">order</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">order</span>\n<span class=\"ruby-keyword\">end</span>\n</pre>\n"],["full_title","ApplicationHelper","ApplicationHelper.html#method-i-full_title","(page_title)","<p>builds the title for each page (title must be provided in each page)\n"],["generate_relationships","Course","Course.html#method-i-generate_relationships","(prim_instructor = \"\", prim_userid = \"\", prim_email = \"\")",""],["getUrl","UsersHelper","UsersHelper.html#method-i-getUrl","(major)",""],["get_courses","Cart","Cart.html#method-i-get_courses","()",""],["get_courses","CartsHelper","CartsHelper.html#method-i-get_courses","()",""],["get_exception","ErrorsController","ErrorsController.html#method-i-get_exception","()",""],["get_link","CoursesHelper","CoursesHelper.html#method-i-get_link","(type, value)","<p>More efficient link generation using a hash table of previously requested\nlinks\n"],["get_module","Course","Course.html#method-i-get_module","()",""],["get_semesters","SettingsHelper","SettingsHelper.html#method-i-get_semesters","()",""],["get_val","Setting","Setting.html#method-c-get_val","(key)",""],["guidelines","StaticPagesController","StaticPagesController.html#method-i-guidelines","()",""],["handle","Comment","Comment.html#method-i-handle","()","<p>method to get the username of the commentor\n"],["handlekey","User","User.html#method-i-handlekey","()","<p>give the key for locating the user&#39;s handle\n"],["has_children?","Comment","Comment.html#method-i-has_children-3F","()","<p>helper method to check if a comment has children\n"],["help","StaticPagesController","StaticPagesController.html#method-i-help","()",""],["hide_disclaimer","SessionsController","SessionsController.html#method-i-hide_disclaimer","()",""],["hide_motd","SessionsController","SessionsController.html#method-i-hide_motd","()",""],["hide_remove","CommentsController","CommentsController.html#method-i-hide_remove","()",""],["index","CommentsController","CommentsController.html#method-i-index","()",""],["index","CoursesController","CoursesController.html#method-i-index","()","<p>INDEX action: used to render the javascript and search results\n"],["index","DepartmentsController","DepartmentsController.html#method-i-index","()",""],["index","HandlesController","HandlesController.html#method-i-index","()",""],["index","HubcoursesController","HubcoursesController.html#method-i-index","()",""],["index","MyClassesController","MyClassesController.html#method-i-index","()",""],["index","ProfessorsController","ProfessorsController.html#method-i-index","()","<p>render the page with the professor search\n"],["index","ReportsController","ReportsController.html#method-i-index","()",""],["index","UsersController","UsersController.html#method-i-index","()","<p>return all the users and render the user list page\n<p>Permissions any user\n"],["initialize_ldap_con","SessionsHelper","SessionsHelper.html#method-i-initialize_ldap_con","()","<p>initialize a connection to the college ldap, and return an object\nrepresenting it\n"],["lock","Report","Report.html#method-i-lock","(name)",""],["mail_cart","Interact","Interact.html#method-i-mail_cart","(requestip,cart,email,sender)",""],["mail_to","CartsController","CartsController.html#method-i-mail_to","()","<p>email cart\n"],["make_admin","User","User.html#method-i-make_admin","()",""],["make_old","Comment","Comment.html#method-i-make_old","()",""],["make_query_string","ApplicationHelper","ApplicationHelper.html#method-i-make_query_string","(str, fields, any)","<p>builds a MYSQL query string based on user input takes in a user input\nstring, str, and an array of sql …\n"],["mobile_format","SessionsController","SessionsController.html#method-i-mobile_format","()","<p>Render javascript to change format\n"],["mobile_switch","ApplicationController","ApplicationController.html#method-i-mobile_switch","()",""],["motd","ApplicationHelper","ApplicationHelper.html#method-i-motd","()",""],["motd","SessionsHelper","SessionsHelper.html#method-i-motd","()",""],["motd_cookie_expired?","SessionsHelper","SessionsHelper.html#method-i-motd_cookie_expired-3F","()",""],["mute","Handle","Handle.html#method-i-mute","()",""],["mute","HandlesController","HandlesController.html#method-i-mute","()",""],["nameerror","StaticPagesController","StaticPagesController.html#method-i-nameerror","()",""],["new","CommentsController","CommentsController.html#method-i-new","()",""],["new","CoursesController","CoursesController.html#method-i-new","()","<p>NEW action: empty\n"],["new","MyClassesController","MyClassesController.html#method-i-new","()",""],["new","ProfessorsController","ProfessorsController.html#method-i-new","()","<p>render the page with the form for a new professor\n"],["new","ReportsController","ReportsController.html#method-i-new","()",""],["new","SessionsController","SessionsController.html#method-i-new","()","<p>Action associated with displaying an html form for creating a new session\ni.e. sign_up/sign_in\n"],["new","SyllabusController","SyllabusController.html#method-i-new","()",""],["new","UTF8Sanitizer","UTF8Sanitizer.html#method-c-new","(app)",""],["new","UsersController","UsersController.html#method-i-new","()","<p>renders the new view (signup)\n<p><strong>Permissions</strong> any browser\n"],["not_found","ErrorsController","ErrorsController.html#method-i-not_found","()","<p>renders 404 error page\n"],["notify_prof_set","Course","Course.html#method-i-notify_prof_set","(profemail)",""],["notify_professor","Interact","Interact.html#method-i-notify_professor","(course, email)",""],["populate","ProfessorsController","ProfessorsController.html#method-i-populate","()","<p>Unused. Also, don&#39;t use this. It&#39;s out of date. The LDAP connection\nshit is super different now. …\n"],["preview","ProfessorsController","ProfessorsController.html#method-i-preview","()","<p>Function to generate a preview of a professor&#39;s more information\ncontent. Uses the redcarpet gem …\n"],["professor_courses","ProfessorsController","ProfessorsController.html#method-i-professor_courses","()","<p>Function to generate all the courses the professor has the permission to\nedit\n"],["professors","StaticPagesController","StaticPagesController.html#method-i-professors","()",""],["questions","StaticPagesController","StaticPagesController.html#method-i-questions","()",""],["questions_mailer","StaticPagesController","StaticPagesController.html#method-i-questions_mailer","()",""],["redirect_back_or","SessionsHelper","SessionsHelper.html#method-i-redirect_back_or","(default)","<p>Permits friendly forwarding i.e. if a user tries to go to a page that\nrequires a sign in, he&#39;ll be …\n"],["remove","CartsController","CartsController.html#method-i-remove","()","<p>remove a course from cart\n"],["reply","CommentsController","CommentsController.html#method-i-reply","()",""],["reply_form","CommentsController","CommentsController.html#method-i-reply_form","()",""],["report_confirmation","Interact","Interact.html#method-i-report_confirmation","(sender, report)",""],["reported","Report","Report.html#method-i-reported","()",""],["resolve","Report","Report.html#method-i-resolve","(admin,response)",""],["reveal","HandlesController","HandlesController.html#method-i-reveal","()",""],["reveal_handle_user","Interact","Interact.html#method-i-reveal_handle_user","(user, admin, handle)",""],["schedule","UsersController","UsersController.html#method-i-schedule","()",""],["score","Comment","Comment.html#method-i-score","()","<p>calculate the voted score of the comment\n"],["search","CartsController","CartsController.html#method-i-search","()",""],["search","CoursesController","CoursesController.html#method-i-search","()","<p>SEARCH action: performs course search\n\n<pre>- builds a &#39;query string,&#39; used to query SQL database, based on ...</pre>\n"],["search","HandlesController","HandlesController.html#method-i-search","()",""],["search","HubcoursesController","HubcoursesController.html#method-i-search","()",""],["search","MyClassesController","MyClassesController.html#method-i-search","()",""],["search","ProfessorsController","ProfessorsController.html#method-i-search","()",""],["search","UsersController","UsersController.html#method-i-search","()","<p>search the users according to form from index page\n<p>Permissions any user\n"],["self_destroy","UsersController","UsersController.html#method-i-self_destroy","()","<p>used by a user to delete their own account (from confirm destroy page)\n<p><strong>Permissions</strong> current_user\n"],["send_e","Interact","Interact.html#method-i-send_e","(title, message, user)",""],["send_q","Interact","Interact.html#method-i-send_q","(title, message, user)",""],["server_error","ErrorsController","ErrorsController.html#method-i-server_error","()","<p>renders 500 error page\n"],["set","Setting","Setting.html#method-c-set","(key,value)",""],["set_cart","CartsHelper","CartsHelper.html#method-i-set_cart","()",""],["set_courses","Cart","Cart.html#method-i-set_courses","(course_string)",""],["set_motd","SettingsController","SettingsController.html#method-i-set_motd","()",""],["set_prev","Comment","Comment.html#method-i-set_prev","(prev_id)","<p>set the prev version id of a comment\n"],["sever_relationships","Course","Course.html#method-i-sever_relationships","()",""],["show","CartsController","CartsController.html#method-i-show","()","<p>gets courses from a cart\n"],["show","CommentsController","CommentsController.html#method-i-show","()","<p>shows the previous version of the comment\n"],["show","DepartmentsController","DepartmentsController.html#method-i-show","()",""],["show","HandlesController","HandlesController.html#method-i-show","()",""],["show","HubcoursesController","HubcoursesController.html#method-i-show","()",""],["show","MyClassesController","MyClassesController.html#method-i-show","()","<p>Want to display the users cart the same way it&#39;s displayed on the main\npage\n"],["show","ProfessorsController","ProfessorsController.html#method-i-show","()","<p>render the professor page\n"],["show","SyllabusController","SyllabusController.html#method-i-show","()",""],["show","UsersController","UsersController.html#method-i-show","()","<p>Renders views/users/show.html.erb. This is the Profile page.\n<p><strong>Permissions</strong>: any browser\n"],["sign_in","SessionsHelper","SessionsHelper.html#method-i-sign_in","(user)","<p>Sign in a user with a cookie\n"],["sign_out","SessionsHelper","SessionsHelper.html#method-i-sign_out","()","<p>Sign out the current user\n"],["signed_in?","SessionsHelper","SessionsHelper.html#method-i-signed_in-3F","()","<p>Checks if the user is signed in\n"],["sort_by_score","Comment","Comment.html#method-c-sort_by_score","(comments)",""],["source_root","JqueryWeekCalendar::Install","JqueryWeekCalendar/Install.html#method-c-source_root","()",""],["store_location","SessionsHelper","SessionsHelper.html#method-i-store_location","()","<p>Remembers the url of the page the user tried to visit\n"],["text_semester","Course","Course.html#method-c-text_semester","(semester)",""],["to_csv","Cart","Cart.html#method-i-to_csv","()",""],["to_csv","Department","Department.html#method-i-to_csv","( enroll )",""],["to_csv","Hubcourse","Hubcourse.html#method-i-to_csv","(enroll)",""],["to_csv","Professor","Professor.html#method-i-to_csv","(enroll)",""],["to_csv_row","Course","Course.html#method-c-to_csv_row","(c)",""],["to_param","Department","Department.html#method-i-to_param","()",""],["to_param","Hubcourse","Hubcourse.html#method-i-to_param","()",""],["to_reported","Interact","Interact.html#method-i-to_reported","(reported, message, report)",""],["to_reporter","Interact","Interact.html#method-i-to_reporter","(reporter, message, report)",""],["toggle_active","ProfessorsController","ProfessorsController.html#method-i-toggle_active","()","<p>switch a professor between active and dark\n"],["toggle_status","Comment","Comment.html#method-i-toggle_status","(status)",""],["toggle_status","Professor","Professor.html#method-i-toggle_status","()","<p>Changes status of a professor\n"],["translate_mod","CoursesHelper","CoursesHelper.html#method-i-translate_mod","(mod_num)",""],["translate_semester","Course","Course.html#method-c-translate_semester","(year_month)",""],["translate_semester","CoursesHelper","CoursesHelper.html#method-i-translate_semester","(semester)",""],["translate_time","CommentsHelper","CommentsHelper.html#method-i-translate_time","(t)","<p>Takes a TIME object and converts it to human readable timestamp for\ncomments\n"],["unlock","Report","Report.html#method-i-unlock","()",""],["unmake_admin","User","User.html#method-i-unmake_admin","()",""],["unmute","Handle","Handle.html#method-i-unmute","()",""],["unresolve","Report","Report.html#method-i-unresolve","(admin,response)",""],["update","CartsController","CartsController.html#method-i-update","()","<p>This adds the selected courses to the user&#39;s cart\n<p>Parameter: :courses, which are passed in from\n_search_results_template.html.erb …\n"],["update","CommentsController","CommentsController.html#method-i-update","()",""],["update","CoursesController","CoursesController.html#method-i-update","()","<p>UPDATE action: empty\n"],["update","HandlesController","HandlesController.html#method-i-update","()",""],["update","ProfessorsController","ProfessorsController.html#method-i-update","()","<p>change the professor according to the form\n"],["update","ReportsController","ReportsController.html#method-i-update","()",""],["update","UsersController","UsersController.html#method-i-update","()","<p>Posts changes to the user&#39;s settings.\n<p><code>params[:user]</code> is submitted by a call to\n<code>update_path(@user.id</code> …\n"],["update_all","SettingsController","SettingsController.html#method-i-update_all","()",""],["update_size","Course","Course.html#method-i-update_size","(csize, enroll)",""],["user_count","ApplicationHelper","ApplicationHelper.html#method-i-user_count","()","<p>variable to hold the current number of users\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>@ # * PRESTISSIMO * # @\n<p>Welcome to Prestissimo&#39;s source code! Useful and/or relevant\ninformation about …\n"]]}}